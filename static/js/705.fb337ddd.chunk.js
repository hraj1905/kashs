"use strict";(self.webpackChunkkashs=self.webpackChunkkashs||[]).push([[705],{705:(o,e,n)=>{n.r(e),n.d(e,{default:()=>i});var t=n(43),r=n(675),s=n(987),c=n(579);const i=()=>{const{roomId:o}=(0,r.g)(),e=(0,r.Zp)(),n=(0,t.useRef)(null);return(0,t.useEffect)((()=>{if(console.log("Room component mounted"),console.log("Room ID from useParams:",o),!o)return console.error("Error: Room ID is empty!"),void e("/");const t=s.ZegoUIKitPrebuilt.generateKitTokenForTest(1513470951,"80943699f3d799c9b498e4852970cbcd",o,Date.now().toString(),"Harsh");console.log("Room ID:",o),console.log("Kit Token:",t);const r=s.ZegoUIKitPrebuilt.create(t);console.log("Attempting to join the room...");const c=r.joinRoom({container:n.current,sharedLinks:[{name:"Copy Link",url:`http://localhost:3000/room/${o}`}],scenario:{mode:s.ZegoUIKitPrebuilt.OneONoneCall}});c&&"function"===typeof c.then?c.then((()=>{console.log("Successfully joined the room")})).catch((o=>{console.error("Error joining the room:",o)})):console.error("zc.joinRoom did not return a promise")}),[o,e]),(0,c.jsxs)("div",{children:[(0,c.jsxs)("h2",{children:["Room ID: ",o]}),(0,c.jsx)("div",{ref:n,style:{width:"100%",height:"500px"}})]})}}}]);
//# sourceMappingURL=705.fb337ddd.chunk.js.map